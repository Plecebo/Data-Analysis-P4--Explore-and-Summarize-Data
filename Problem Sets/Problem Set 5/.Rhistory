coord_trans(y="sqrt")
ggplot(aes(x=age, y=friends_initiated), data=pf)
ggplot(aes(x=age, y=friends_initiated), data=pf) + geom_point()
names(pf)
ggplot(aes(x=age, y=friendships_initiated), data=pf) + geom_point()
ggplot(aes(x=age, y=friendships_initiated), data=pf) + geom_point(alpha = 1/20)
ggplot(aes(x=age, y=friendships_initiated), data=pf) + geom_point(alpha = 1/10, position = position_jitter(h=0))
ggplot(aes(x=age, y=friendships_initiated), data=pf) + geom_point(alpha = 1/10, position = position_jitter(h=0)) + coord_trans(y="sqrt")
library(dplyr)
age_groups = group_by(pf, age)
pf.fc_by_age <- summarize(age_groups,
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n())
pf.fc_by_age <- arrange(pf.fc_by_age, age)
head(pf.fc_by_age)
pf.fc_by_age <- pf %.% group_by(age) %.%
summarize(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %.%
group_by(age)
head(pf.fc_by_age)
pf.fc_by_age <- pf %>% group_by(age) %>%
summarize(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %>%
group_by(age)
head(pf.fc_by_age)
ggplot(aes(x=age, y=friend_count_mean), data = pf.fc_by_age) + geom_line()
ggplot(aes(x=age, y=friendships_initiated), data=pf) + geom_point(alpha = 1/10, position = position_jitter(h=0)) + coord_trans(y="sqrt")
ggplot(aes(x=age, y=friendships_initiated), data=pf) xlim(13,90)+ geom_point(alpha = 1/10, position = position_jitter(h=0)) + coord_trans(y="sqrt")
ggplot(aes(x=age, y=friendships_initiated), data=pf) + xlim(13,90)+ geom_point(alpha = 1/10, position = position_jitter(h=0)) + coord_trans(y="sqrt")
geom_point(alpha = .05,
ggplot(aes(x=age, y=friendships_initiated), data=pf) +
xlim(13,90)+
geom_point(alpha = .05,
position = position_jitter(h=0),
color = "orange") +
coord_trans(y="sqrt")
ggplot(aes(x=age, y=friendships_initiated), data=pf) +
xlim(13,90)+
geom_point(alpha = .05,
position = position_jitter(h=0),
color = "orange") +
coord_trans(y="sqrt")
geom_line(stat="summary", fun.y=mean)
ggplot(aes(x=age, y=friendships_initiated), data=pf) +
xlim(13,90)+
geom_point(alpha = .05,
position = position_jitter(h=0),
color = "orange") +
coord_trans(y="sqrt") +
geom_line(stat="summary", fun.y=mean)
ggplot(aes(x=age, y=friendships_initiated), data=pf) +
xlim(13,90)+
geom_point(alpha = .05,
position = position_jitter(h=0),
color = "orange") +
coord_trans(y="sqrt") +
geom_line(stat="summary", fun.y=mean) +
geom_line(stat="summary", fun.y = quantile, probs = .1, linetype =2, color = 'blue')
ggplot(aes(x=age, y=friendships_initiated), data=pf) +
xlim(13,90)+
geom_point(alpha = .05,
position = position_jitter(h=0),
color = "orange") +
coord_trans(y="sqrt") +
geom_line(stat="summary", fun.y=mean) +
geom_line(stat="summary", fun.y = quantile, probs = .1, linetype =2, color = 'blue') +
geom_line(stat="summary", fun.y = quantile, probs = .5, color = 'blue')+
geom_line(stat="summary", fun.y = quantile, probs = .9, linetype =2, color = 'blue')
ggplot(aes(x=age, y=friendships_initiated), data=pf) +
coord_cartesian(xlim = c(13, 90))+
geom_point(alpha = .05,
position = position_jitter(h=0),
color = "orange") +
coord_trans(y="sqrt") +
geom_line(stat="summary", fun.y=mean) +
geom_line(stat="summary", fun.y = quantile, probs = .1, linetype =2, color = 'blue') +
geom_line(stat="summary", fun.y = quantile, probs = .5, color = 'blue')+
geom_line(stat="summary", fun.y = quantile, probs = .9, linetype =2, color = 'blue')
?core.test
?cor.test
cor.test(pf$age, pf$friend_count)
ggplot(aes(www_likes_received, likes_received), data= pf) + geom_point()
ggplot(aes(www_likes_received, likes_received), data= pf) +
geom_point()+
xlim(0,quantile(pf$www_likes_received, 0.95))+
ylim(0,quantile(pf$likes_received, 0.95))
ggplot(aes(www_likes_received, likes_received), data= pf) +
geom_point()+
xlim(0,quantile(pf$www_likes_received, 0.95))+
ylim(0,quantile(pf$likes_received, 0.95)) +
geom_smooth(method = 'lm', color='red')
cor.test(pf$www_likes_received, pf$likes_received)
install.packages('alr3')
library(alr3)
data("Mitchell")
names(Mitchell)
ggplot(aes(Month, Temp), data = Mitchell) + geom_point()
cor.test(Mitchell$Month, Mitchell$Temp)
ggplot(aes(Month, Temp), data = Mitchell) + geom_point() +
scale_x_discrete(breaks = seq(0,203,12))
head(pf.fc_by_age, 10)
pf.fc_by_age[17:19,]
names(pf)
View(pf)
View(pf)
pf$age_with_months <- pf$age + (12-pf$dob_month)/12
View(pf)
View(pf)
pf.fc_by_age_months <- pf %>% group_by(age_with_months) %>%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(as.numeric(friend_count)),
n = n()) %>%
arrange(age_with_months)
View(pf.fc_by_age_months)
View(pf.fc_by_age_months)
ggplot(aes(age_with_months, friend_count_mean), data = pf.fc_by_age_months) + geom_line()
ggplot(aes(age_with_months, friend_count_mean), data = pf.fc_by_age_months) + geom_line() + xlim(0,71)
ggplot(aes(age_with_months, friend_count_mean), data = pf.fc_by_age_months) + geom_line() + xlim(13,71)
ggplot(aes(age_with_months, friend_count_mean), data = pf.fc_by_age_months) + geom_point() + xlim(13,71)
ggplot(aes(age_with_months, friend_count_mean), data = subset(pf.fc_by_age_months, age_with_months <71)) + geom_line()
ggplot(aes(x=age, y=friend_count_mean), data = subset(pf.fc_by_age, age <71)) + geom_line()
library(gridExtra)
grid.arrange(p2,p1, ncol = 1)
p1 <- ggplot(aes(x=age, y=friend_count_mean), data = subset(pf.fc_by_age, age <71)) + geom_line()
p2 <- ggplot(aes(age_with_months, friend_count_mean), data = subset(pf.fc_by_age_months, age_with_months <71)) + geom_line()
grid.arrange(p2,p1, ncol = 1)
p3 <- ggplot(aes(age, friend_count), data = subset(pf, age<71)) + geom_line()
grid.arrange(p2,p1,p3, ncol = 1)
p3 <- ggplot(aes(round(age/5)*5, friend_count), data = subset(pf, age<71)) + geom_line(stat="summary", fun.y = mean)
grid.arrange(p2,p1,p3, ncol = 1)
p1 <- ggplot(aes(x=age, y=friend_count_mean), data = subset(pf.fc_by_age, age <71)) + geom_line() + geom_smooth()
p2 <- ggplot(aes(age_with_months, friend_count_mean), data = subset(pf.fc_by_age_months, age_with_months <71)) + geom_line() + geom_smooth()
grid.arrange(p2,p1,p3, ncol = 1)
data("diamonds")
names(diamonds)
ggplot(aes(x, price), data = diamonds) + geom_point()
cor.test(diamonds$price, diamonds$x)
cor.test(diamonds$price, diamonds$y)
cor.test(diamonds$price, diamonds$z)
ggplot(aes(price, depth), data=diamonds) + geom_point()
ggplot(aes(depth, price), data=diamonds) + geom_point()
ggplot(aes(price, depth), data=diamonds) + geom_point()
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha = 1/100)
summarize(diamonds$depth)
summary(diamonds$depth)
ggplot(data = diamonds, aes(x = depth, y = price)) +
geom_point(alpha = 1/100) +
scale_x_continuous(breaks = seq(43,79,2))
cor.test(diamonds$depth, diamonds$price)
ggplot(aes(price,carat), data = diamonds) + geom_point() + xlim(0, quantile(price, .9)) + ylim(0,quantile(carat,.9))
ggplot(aes(price,carat), data = diamonds) + geom_point() + xlim(0, quantile(diamonds$price, .9)) + ylim(0,quantile(diamonds$carat,.9))
ggplot(aes(carat,price), data = diamonds) + geom_point() + ylim(0, quantile(diamonds$price, .9)) + xlim(0,quantile(diamonds$carat,.9))
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
ggplot(aes(price, volume), data diamonds), geom_point()
ggplot(aes(price, volume), data = diamonds), geom_point()
ggplot(aes(price, volume), data = diamonds) + geom_point()
ggplot(aes(volume, price), data = diamonds) + geom_point()
diamonds.volumes_subset <- subset(diamonds, volume <= 800 & volume > 0)
cor.test(diamonds.volumes_subset$volume, diamonds.volumes_subset$price)
ggplot(aes(volume, price), data = diamonds) + geom_point(alpha = 1/10)
ggplot(aes(volume, price), data = diamonds) + geom_point(alpha = 1/20)
ggplot(aes(volume, price), data = diamonds) + geom_point(alpha = 1/20) + geom_smooth(model = 'lm')
ggplot(aes(volume, price), data = diamonds.volumes_subset) + geom_point(alpha = 1/20) + geom_smooth(model = 'lm')
diamondsByClarity <- diamonds %>% group_by(clarity) %>%
summarise(mean_price = mean(price),
median_price = median(as.numeric(price)),
min_price = min(price),
max_price = max(price),
n = n())
View(diamondsByClarity)
View(diamondsByClarity)
data(diamonds)
library(dplyr)
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
ggplot(aes(clarity, mean_price), data = diamonds_mp_by_clarity) + geom_bar()
ggplot(aes(clarity), data = diamonds_mp_by_clarity) + geom_bar()
ggplot(aes(x = clarity, y = mean_price), data = diamonds_mp_by_clarity) + geom_bar()
ggplot(aes(x = clarity, y = mean_price), data = diamonds_mp_by_clarity) + geom_bar(stat= "identity")
ggplot(aes(x = color, y = mean_price), data = diamonds_mp_by_color) + geom_bar(stat= "identity")
p1 = ggplot(aes(x = clarity, y = mean_price), data = diamonds_mp_by_clarity) + geom_bar(stat= "identity")
p2 = ggplot(aes(x = color, y = mean_price), data = diamonds_mp_by_color) + geom_bar(stat= "identity")
library(gridExtra)
grid.arrange(p1,p2, ncol = 1)
?diamonds
setwd('E:/GitHub/Data Analysis-P4-Explore-and-summarize-data/Problem Set 4/')
list.files()
cp100 <- read.csv('cell phone per 100.csv')
View(cp100)
View(cp100)
library(tidyr)
library(tidyr)
cp100.reshaped <- cp100 %>% gather(year, cp100, X1965:x2011)
cp100.reshaped <- cp100 %>% gather(year, cp100, 1965:2011)
cp100.reshaped <- cp100 %>% gather(year, cp100, c(2:47))
View(cp100.reshaped)
View(cp100.reshaped)
cp100.reshaped <- cp100 %>% gather(year, cp100, c(2:48))
View(cp100.reshaped)
View(cp100.reshaped)
cp100 <- read.csv('cell phone per 100.csv', sep=',', check.names = FALSE)
cp100.reshaped <- cp100 %>% gather(year, cp100, c(2:48))
ggplot(aes(country, cp100), data = cp100.reshaped) + geom_point()
ggplot(aes(year, cp100), data = cp100.reshaped) + geom_point()
ggplot(aes(year, cp100), data = cp100.reshaped) + geom_line()
ggplot(aes(year, cp100), data = cp100.reshaped) + geom_bar()
ggplot(aes(year, cp100), data = cp100.reshaped) + geom_bar(stat="identity")
ggplot(aes(year, cp100), data = cp100.reshaped) + geom_bar(stat="identity") + scale_x_continuous(breaks= seq(1965,2011,2))
ggplot(aes(year, cp100), data = cp100.reshaped) + geom_bar(stat="identity") + scale_x_discrete(breaks= seq(1965,2011,2))
ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985) + geom_bar(stat="identity") + scale_x_discrete(breaks= seq(1965,2011,2))
ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985)) + geom_bar(stat="identity") + scale_x_discrete(breaks= seq(1965,2011,2))
cp100 <- read.csv('cell phone per 100.csv', sep=',', stringsAsFactors=FALSE, check.names = FALSE)
cp100.reshaped <- cp100 %>% gather(year, cp100, c(2:48))
ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985)) + geom_bar(stat="identity")
cp100.reshaped$cp100 <- as.numeric(as.character(cp100.reshaped$cp100))
ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985)) + geom_bar(stat="identity")
cp100 <- read.csv('cell phone per 100.csv', sep=',', stringsAsFactors=FALSE, check.names = FALSE)
cp100.reshaped <- cp100 %>% gather(year, cp100, c(2:48))
cp100.reshaped$year <- as.numeric(as.character(cp100.reshaped$year))
ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985)) + geom_bar(stat="identity")
ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985 & country == "Japan")) + geom_bar(stat="identity")
ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985 & Country == "Japan")) + geom_bar(stat="identity")
ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985 & Country == "United States")) + geom_bar(stat="identity")
grid.arrange(p1,p2,p3, ncol=1)
p1 <- ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985)) + geom_bar(stat="identity")
p2 <- ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985 & Country == "Japan")) + geom_bar(stat="identity")
p3 <- ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985 & Country == "United States")) + geom_bar(stat="identity")
grid.arrange(p1,p2,p3, ncol=1)
p1 <- ggplot(aes(year, average(cp100), data = subset(cp100.reshaped, year >= 1985)) + geom_bar(stat="identity") + labs(title = "Global Cellphone usage per 100 people")
p1 <- ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985)) + geom_bar(stat="identity") + labs(title = "Global Cellphone usage per 100 people", x = 'Year', y = 'Cell Phones Per 100 People')
grid.arrange(p1,p2,p3, ncol=1)
p2 <- ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985 & Country == "Japan")) + geom_bar(stat="identity")+ labs(title = "Japanese Cellphone usage per 100 people", x = 'Year', y = 'Cell Phones Per 100 People')
p3 <- ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985 & Country == "United States")) + geom_bar(stat="identity") + labs(title = "US Cellphone usage per 100 people", x = 'Year', y = 'Cell Phones Per 100 People')
grid.arrange(p1,p2,p3, ncol=1)
p1 <- ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985)) + geom_bar(stat="identity") + labs(title = "Global Cellphones per 100 people", x = 'Year', y = 'Cell Phones Per 100 People')
p2 <- ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985 & Country == "Japan")) + geom_bar(stat="identity")+ labs(title = "Japanese Cellphones per 100 people", x = 'Year', y = 'Cell Phones Per 100 People')
p3 <- ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985 & Country == "United States")) + geom_bar(stat="identity") + labs(title = "US Cellphones per 100 people", x = 'Year', y = 'Cell Phones Per 100 People')
grid.arrange(p1,p2,p3, ncol=1)
p1 <- ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985)) + geom_bar(stat="identity") + labs(title = "Global Cellphones per 100 people", x = 'Year', y = 'Cellphones Per 100 People')
p2 <- ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985 & Country == "Japan")) + geom_bar(stat="identity")+ labs(title = "Japanese Cellphones per 100 people", x = 'Year', y = 'Cellphones Per 100 People')
p3 <- ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985 & Country == "United States")) + geom_bar(stat="identity") + labs(title = "US Cellphones per 100 people", x = 'Year', y = 'Cellphones Per 100 People')
grid.arrange(p1,p2,p3, ncol=1)
p1 <- ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985)) + geom_bar(stat="identity") + labs(title = "Global Cellphones per 100 people", x = 'Year', y = 'Cellphones Per 100 People') + scale_y_continuous(summary = "mean")
p2 <- ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985 & Country == "Japan")) + geom_bar(stat="identity")+ labs(title = "Japanese Cellphones per 100 people", x = 'Year', y = 'Cellphones Per 100 People')
p3 <- ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985 & Country == "United States")) + geom_bar(stat="identity") + labs(title = "US Cellphones per 100 people", x = 'Year', y = 'Cellphones Per 100 People')
grid.arrange(p1,p2,p3, ncol=1)
p1 <- ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985)) + geom_bar(stat="identity", fun.y = mean) + labs(title = "Global Cellphones per 100 people", x = 'Year', y = 'Cellphones Per 100 People') +
p1 <- ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985)) + geom_bar(stat="identity", fun.y = mean) + labs(title = "Global Cellphones per 100 people", x = 'Year', y = 'Cellphones Per 100 People') +
p1 <- ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985)) + geom_bar(stat="identity", fun.y = mean) + labs(title = "Global Cellphones per 100 people", x = 'Year', y = 'Cellphones Per 100 People')
p2 <- ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985 & Country == "Japan")) + geom_bar(stat="identity")+ labs(title = "Japanese Cellphones per 100 people", x = 'Year', y = 'Cellphones Per 100 People')
p3 <- ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985 & Country == "United States")) + geom_bar(stat="identity") + labs(title = "US Cellphones per 100 people", x = 'Year', y = 'Cellphones Per 100 People')
grid.arrange(p1,p2,p3, ncol=1)
p1 <- ggplot(aes(year, color=Country), data = subset(cp100.reshaped, year >= 1985)) + geom_bar(stat="identity", fun.y = mean) + labs(title = "Global Cellphones per 100 people", x = 'Year', y = 'Cellphones Per 100 People')
p2 <- ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985 & Country == "Japan")) + geom_bar(stat="identity")+ labs(title = "Japanese Cellphones per 100 people", x = 'Year', y = 'Cellphones Per 100 People')
p3 <- ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985 & Country == "United States")) + geom_bar(stat="identity") + labs(title = "US Cellphones per 100 people", x = 'Year', y = 'Cellphones Per 100 People')
grid.arrange(p1,p2,p3, ncol=1)
p1 <- ggplot(aes(year, color=Country), data = subset(cp100.reshaped, year >= 1985)) + geom_line( fun.y = mean) + labs(title = "Global Cellphones per 100 people", x = 'Year', y = 'Cellphones Per 100 People')
p2 <- ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985 & Country == "Japan")) + geom_bar(stat="identity")+ labs(title = "Japanese Cellphones per 100 people", x = 'Year', y = 'Cellphones Per 100 People')
p3 <- ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985 & Country == "United States")) + geom_bar(stat="identity") + labs(title = "US Cellphones per 100 people", x = 'Year', y = 'Cellphones Per 100 People')
grid.arrange(p1,p2,p3, ncol=1)
cp100
p1 <- ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985)) + geom_bar(stat="identity", fun.y = mean) + labs(title = "Global Cellphones per 100 people", x = 'Year', y = 'Cellphones Per 100 People')
p2 <- ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985 & Country == "Japan")) + geom_bar(stat="identity")+ labs(title = "Japanese Cellphones per 100 people", x = 'Year', y = 'Cellphones Per 100 People')
p3 <- ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985 & Country == "United States")) + geom_bar(stat="identity") + labs(title = "US Cellphones per 100 people", x = 'Year', y = 'Cellphones Per 100 People')
grid.arrange(p1,p2,p3, ncol=1)
cp100.grouped_by_year <- cp100.reshaped %>% group_by(year) %>%
summarise(cp100mean = mean(cp100))
p1 <- ggplot(aes(year, cp100mean), data = subset(cp100.grouped_by_year, year >= 1985)) + geom_bar(stat="identity", fun.y = mean) + labs(title = "Global Cellphones per 100 people", x = 'Year', y = 'Cellphones Per 100 People')
p2 <- ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985 & Country == "Japan")) + geom_bar(stat="identity")+ labs(title = "Japanese Cellphones per 100 people", x = 'Year', y = 'Cellphones Per 100 People')
p3 <- ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985 & Country == "United States")) + geom_bar(stat="identity") + labs(title = "US Cellphones per 100 people", x = 'Year', y = 'Cellphones Per 100 People')
grid.arrange(p1,p2,p3, ncol=1)
cp100.grouped_by_year <- cp100.reshaped %>% group_by(year) %>%
summarise(cp100mean = mean(cp100))
View(cp100.grouped_by_year)
View(cp100.grouped_by_year)
cp100 <- read.csv('cell phone per 100.csv', sep=',', stringsAsFactors=FALSE, check.names = FALSE)
cp100.reshaped <- cp100 %>% gather(year, cp100, c(2:48))
cp100.reshaped$year <- as.numeric(as.character(cp100.reshaped$year))
cp100.grouped_by_year <- cp100.reshaped %>% group_by(year) %>%
summarise(cp100mean = mean(cp100),
n = n()) %>%
arrange(year)
p1 <- ggplot(aes(year, cp100mean), data = subset(cp100.grouped_by_year, year >= 1985)) + geom_bar(stat="identity", fun.y = mean) + labs(title = "Global Cellphones per 100 people", x = 'Year', y = 'Cellphones Per 100 People')
p2 <- ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985 & Country == "Japan")) + geom_bar(stat="identity")+ labs(title = "Japanese Cellphones per 100 people", x = 'Year', y = 'Cellphones Per 100 People')
p3 <- ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985 & Country == "United States")) + geom_bar(stat="identity") + labs(title = "US Cellphones per 100 people", x = 'Year', y = 'Cellphones Per 100 People')
grid.arrange(p1,p2,p3, ncol=1)
ggplot(aes(year, cp100mean), data = subset(cp100.grouped_by_year, year >= 1985)) + geom_bar(stat="identity", fun.y = mean) + labs(title = "Global Cellphones per 100 people", x = 'Year', y = 'Cellphones Per 100 People')
View(cp100.grouped_by_year)
cp100.grouped_by_year <- cp100.reshaped %>% group_by(year) %>%
summarise(cp100mean = mean(cp100,na.rm=TRUE),
n = n()) %>%
arrange(year)
gplot(aes(year, cp100mean), data = subset(cp100.grouped_by_year, year >= 1985)) + geom_bar(stat="identity", fun.y = mean) + labs(title = "Global Cellphones per 100 people", x = 'Year', y = 'Cellphones Per 100 People')
ggplot(aes(year, cp100mean), data = subset(cp100.grouped_by_year, year >= 1985)) + geom_bar(stat="identity", fun.y = mean) + labs(title = "Global Cellphones per 100 people", x = 'Year', y = 'Cellphones Per 100 People')
cp100 <- read.csv('cell phone per 100.csv', sep=',', stringsAsFactors=FALSE, check.names = FALSE)
cp100.reshaped <- cp100 %>% gather(year, cp100, c(2:48))
cp100.reshaped$year <- as.numeric(as.character(cp100.reshaped$year))
cp100.grouped_by_year <- cp100.reshaped %>% group_by(year) %>%
summarise(cp100mean = mean(cp100,na.rm=TRUE),
n = n()) %>%
arrange(year)
p1 <- ggplot(aes(year, cp100mean), data = subset(cp100.grouped_by_year, year >= 1985)) + geom_bar(stat="identity", fun.y = mean) + labs(title = "Global Cellphones per 100 people", x = 'Year', y = 'Cellphones Per 100 People')
p2 <- ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985 & Country == "Japan")) + geom_bar(stat="identity")+ labs(title = "Japanese Cellphones per 100 people", x = 'Year', y = 'Cellphones Per 100 People')
p3 <- ggplot(aes(year, cp100), data = subset(cp100.reshaped, year >= 1985 & Country == "United States")) + geom_bar(stat="identity") + labs(title = "US Cellphones per 100 people", x = 'Year', y = 'Cellphones Per 100 People')
grid.arrange(p1,p2,p3, ncol=1)
setwd('C:\Users\larry\Downloads')
setwd('C:/Users/larry/Downloads')
ggplot(aes(x = gender, y = age),
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_histogram()
data = subset(pf, !is.na(gender))) + geom_histogram(stat="identity")
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_histogram(stat="identity")
pf.fc_by_age_gender <- pf %>% group_by(age,gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(as.numeric(friend_count)),
n = n()) %>%
arrange(age,gender)
View(pf.fc_by_age_gender)
View(pf.fc_by_age_gender)
pf.fc_by_age_gender <- subset(pf, !is.na(pf$gender)) %>% group_by(age,gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(as.numeric(friend_count)),
n = n()) %>%
arrange(age,gender)
View(pf.fc_by_age_gender)
View(pf.fc_by_age_gender)
pf.fc_by_age_gender <- subset(pf, !is.na(pf$gender)) %>% group_by(age,gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(as.numeric(friend_count)),
n = n())
ggplot(aes(age,mean_friend_count), color = gender, data = pf.fc_by_age_gender) + geom_line()
ggplot(aes(age,mean_friend_count), data = pf.fc_by_age_gender) + geom_line(color = gender)
ggplot(aes(age,mean_friend_count, color=gender), data = pf.fc_by_age_gender) + geom_line()
install.packages('reshape2')
install.packages("reshape2")
install.packages("reshape2")
library(reshape2)
pf.fc_by_age_gender.wide <- dcast(pf.fc_by_age_gender,
age ~ gender,
value.var = 'median_friend_count')
View(pf.fc_by_age_gender.wide)
View(pf.fc_by_age_gender.wide)
ggplot(aes(x=age, y=female/male), data = pf.fc_by_age_gender.wide) + geom_line()
library(ggplot2)
ggplot(aes(x=age, y=female/male), data = pf.fc_by_age_gender.wide) + geom_line()
ggplot(aes(x=age, y=female/male), data = pf.fc_by_age_gender.wide) + geom_line() +geom_hline(position = 1, linetype = 2)
ggplot(aes(x=age, y=female/male), data = pf.fc_by_age_gender.wide) + geom_line() + geom_hline(yintercept=1, linetype = 2)
View(pf)
View(pf)
pf$year_joined <- floor(2014 - (pf$tenure/365),0)
pf$year_joined <- floor(2014 - (pf$tenure/365))
View(pf)
View(pf)
?cut
pf$year_joined.bucket <- cut(pf$year_joined, breaks = 2004:2009,2009:2011,2011:2012,2012:2014)
pf$year_joined.bucket <- cut(pf$year_joined, breaks = c(2004:2009,2009:2011,2011:2012,2012:2014))
pf$year_joined.bucket <- cut(pf$year_joined, breaks = 2004:2009,2009:2011,2011:2012,2012:2014)
pf$year_joined.bucket <- cut(pf$year_joined, breaks = c(2009,2011,2012,2014))
View(pf)
View(pf)
pf$year_joined.bucket <- cut(pf$year_joined, breaks = c(2004,2009,2011,2012,2014))
pf$year_joined.bucket <- cut(pf$year_joined, breaks = c(2004,2009,2011,2012))
pf$year_joined.bucket <- cut(pf$year_joined, breaks = c(2004,2009,2011,2012,2014))
ggplot(aes(age,friend_count), data = subset(pf, !is.na(year_joined.bucket))) + geom_line(aes(color=year_joined.bucket), stat = 'summary', fun.y = median)
ggplot(aes(age,friend_count), data = subset(pf, !is.na(year_joined.bucket))) + geom_line(aes(color=year_joined.bucket), stat = 'summary', fun.y = mean)
ggplot(aes(age,friend_count), data = subset(pf, !is.na(year_joined.bucket))) + geom_line(aes(color=year_joined.bucket), stat = 'summary', fun.y = mean) +geom_line(stat = 'summary', fun.y = mean)
ggplot(aes(age,friend_count), data = subset(pf, !is.na(year_joined.bucket))) + geom_line(aes(color=year_joined.bucket), stat = 'summary', fun.y = mean) +geom_line(stat = 'summary', fun.y = mean, linetype =2)
pf.some_tenure <- subset(pf, tenure > 0)
pf.some_tenure$friend_rate <- pf.some_tenure$friend_count/pf.some_tenure$tenure
summary(pf.some_tenure$friend_rate)
with(subset(pf, tenure > 0),summary(friend_count/tenure))
View(pf.fc_by_age_gender.wide)
ggplot(aes(x=tenure, y=friendships_initiated), data=subset(pf, !is.na(year_joined.bucket))), geom_line(aes(color=year_joined.bucket), stat="summary", fun.y = mean)
ggplot(aes(x=tenure, y=friendships_initiated), data=subset(pf, !is.na(year_joined.bucket))) + geom_line(aes(color=year_joined.bucket), stat="summary", fun.y = mean)
ggplot(aes(x=tenure, y=friendships_initiated/tenure), data=subset(pf, tenure > 0)) + geom_line(aes(color=year_joined.bucket), stat="summary", fun.y = mean)
geom_smooth(aes(color = year_joined.bucket))
ggplot(aes(x = 7 * round(tenure / 7), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_smooth(aes(color = year_joined.bucket))
yo <- read.csv('yogurt.csv')
str(yo)
yo$id <- factor(yo$id)
str(yo)
ggplot(aes(x=price), data=yo)+geom_histogram()
ggplot(aes(x=price), data=yo)+geom_histogram(binwidth=10)
?transform
attach(airquality)
transform(airquality, Ozone = -Ozone)
transform(airquality, new = -Ozone, Temp = (Temp-32)/1.8)
head(airquality)
attach(airquality)
transform(Ozone, logOzone = log(Ozone))
detach(airquality)
transform(yo, all.purchases = strawberry + blueberry + pina.colada+ plin+mixed.berry)
transform(yo, all.purchases = strawberry + blueberry + pina.colada+ plain+mixed.berry)
yo <- transform(yo, all.purchases = strawberry + blueberry + pina.colada+ plain+mixed.berry)
ggplot(aes(x=time, y=price), data = yo) + geom_point()
ggplot(aes(x=time, y=price), data = yo) + geom_point(alpha=1/20)
ggplot(aes(x=time, y=price), data = yo) + geom_jitter(alpha=1/4)
ggplot(aes(x=time, y=price), data = yo) + geom_jitter(alpha=1/4, shape=21)
set.seed(4230)
sample.ids <- sample(levels(yo$id), 16)
ggplot(aes(x=time, y=price), data = subset(yo, id %in% sample.ids)) + facet_wrap(~id) + geom_line() + geom_point(aes(size = all.purchases), pch=1)
set.seed(6813)
sample.ids <- sample(levels(yo$id), 16)
ggplot(aes(x=time, y=price), data = subset(yo, id %in% sample.ids)) + facet_wrap(~id) + geom_line() + geom_point(aes(size = all.purchases), pch=1)
install.packages('GGally')
library(GGally)
nci <- read.table("nci.tsv")
colnames(nci) <- c(1:64)
nci.long.samp <- melt(as.matrix(nci[1:200,]))
names(nci.long.samp) <- c("gene", "case", "value")
head(nci.long.samp)
ggplot(aes(y = gene, x = case, fill = value),
data = nci.long.samp) +
geom_tile() +
scale_fill_gradientn(colours = colorRampPalette(c("blue", "red"))(100))
ggplot(aes(x= price), data = diamonds) + geom_histogram(aes(color = cut)) + facet_wrap(~color)
ggplot(aes(x= price), data = diamonds) + geom_histogram(aes(color = cut)) + facet_wrap(~color)  + scale_fill_brewer(type = 'qual')
ggplot(aes(x= price), data = diamonds) + geom_histogram(aes(color = cut), scale_fill_brewer(type = 'qual')) + facet_wrap(~color)
ggplot(aes(x= price), data = diamonds, scale_fill_brewer(type = 'qual')) + geom_histogram(aes(color = cut)) + facet_wrap(~color)
ggplot(aes(x= price), data = diamonds, scale_fill_brewer(type = 'qual')) + geom_histogram(aes(color = cut)) + facet_wrap(~color)
ggplot(aes(x= price), data = diamonds, scale_fill_brewer(type = 'qual')) + geom_histogram(aes(color = cut), binwidth=10) + facet_wrap(~color)
ggplot(aes(x= price), data = diamonds, scale_fill_brewer(type = 'qual')) + geom_histogram(aes(color = cut), binwidth=1) + facet_wrap(~color)
ggplot(aes(x= price), data = diamonds, scale_fill_brewer(type = 'qual')) + geom_histogram(aes(color = cut), binwidth=100) + facet_wrap(~color)
ggplot(aes(x= price), data = diamonds, scale_fill_brewer(type = 'qual')) + geom_histogram(aes(color = cut), binwidth=1000) + facet_wrap(~color)
ggplot(aes(x= price), data = diamonds) + geom_histogram(aes(color = cut, scale_fill_brewer(type = 'qual'))) + facet_wrap(~color)
ggplot(aes(x= price), data = diamonds) + geom_histogram(aes(color = cut)) + facet_wrap(~color)
ggplot(aes(x= price), data = diamonds) + geom_histogram(aes(color = cut)) + facet_wrap(~color) + scale_color_brewer(type = 'qual')
ggplot(aes(x=table, y=price), data=diamonds) + geom_point(aes(color=cut)) + scale_color_brewer(type='qual')
diamonds <- transform(diamonds, volume = x * y *z)
ggplot(aes(x=volume, y= price), data = diamonds) + geom_point(aes(color=clarity)) + scale_color_brewer(type='div')
ggplot(aes(x=volume, y= price), data = subset(diamonds, volume < quantile(diamonds$volume, .9))) + geom_point(aes(color=clarity)) + scale_color_brewer(type='div')
ggplot(aes(x=volume, y= price), data = subset(diamonds, volume < quantile(diamonds$volume, .9))) + geom_point(aes(color=clarity)) + scale_color_brewer(type='div') + scale_y_log10()
pf <- read.delim('pseudo_facebook.tsv')
names(pf)
pf <- transform(pf, prop_initiated, friendships_initiated/friend_count)
pf <- transform(pf, prop_initiated = friendships_initiated/friend_count)
pf <- transform(subset(pf, friend_count > 0), prop_initiated = friendships_initiated/friend_count)
?transform
pf$year_joined <- floor(2014 - (pf$tenure/365))
pf$year_joined.bucket <- cut(pf$year_joined, breaks = c(2004,2009,2011,2012,2014))
ggplot(aes(x=tenure, y= prop_initiated), data = pf) + geom_line(aes(color=year_joined.bucket))
ggplot(aes(x=tenure, y= prop_initiated), data = pf) + geom_line(aes(color=year_joined.bucket)) + scale_y_continuous(stat="median")
ggplot(aes(x=tenure, y= median(prop_initiated), data = pf) + geom_line(aes(color=year_joined.bucket))
ggplot(aes(x=tenure, y= median(prop_initiated)), data = pf) + geom_line(aes(color=year_joined.bucket))
ggplot(aes(x=tenure, y= median(prop_initiated)), data = pf) + geom_line(aes(color=year_joined.bucket))
ggplot(aes(x=tenure, y= prop_initiated), data = pf) + geom_line(aes(color=year_joined.bucket, fun.y = median))
ggplot(aes(x=tenure, y= prop_initiated), data = pf) + geom_line(aes(color=year_joined.bucket), fun.y = median)
ggplot(aes(x=tenure, y= prop_initiated), data = pf) + geom_line(aes(color=year_joined.bucket), stat="summary",fun.y = median)
ggplot(aes(x=tenure, y= prop_initiated), data = pf) + geom_smooth(aes(color=year_joined.bucket))
by(pf$year_joined.bucket, mean(pf$prop_initiated))
by(pf$year_joined.bucket, mean(pf$prop_initiated, na.rm=TRUE))
by(pf$year_joined.bucket, summary(pf$prop_initiated))
aggregate(pf$prop_initiated,by=pf$year_joined.bucket, mean)
aggregate(pf$prop_initiated,by=list(pf$year_joined.bucket), mean)
by(pf$year_joined.bucket, summary(pf$prop_initiated))
ggplot(aes(x=cut, y = price/carat), data = diamonds), geom_point(aes(color=color)) + facet_wrap(~clarity)
ggplot(aes(x=cut, y = price/carat), data = diamonds)+ geom_point(aes(color=color)) + facet_wrap(~clarity)
ggplot(aes(x=cut, y = price/carat), data = diamonds)+ geom_point(aes(color=color)) + facet_wrap(~clarity) + scale_color_brewer(type = 'div')
ggplot(aes(x=cut, y = price/carat), data = diamonds)+ geom_jitter(aes(color=color)) + facet_wrap(~clarity) + scale_color_brewer(type = 'div')
setwd('E:/GitHub/Data Analysis-P4-Explore-and-summarize-data/Problem Set 5/')
list.files()
bmi <- reac.csv('BMI.csv',sep=',', stringsAsFactors=FALSE, check.names = FALSE)
bmi <- read.csv('BMI.csv',sep=',', stringsAsFactors=FALSE, check.names = FALSE)
library(tidyr)
library(gridExtra)
bmi.reshaped <- bmi %>% gather(year, bmi, c(3:31))
bmi.reshaped$year <- as.numeric(as.character(bmi.reshaped$year))
uniqui(bmi$Country)
unique(bmi$Country)
ggplot(aes(x=year, y= bmi), data = bmi.reshaped) geom_point()
ggplot(aes(x=year, y= bmi), data = bmi.reshaped) + geom_point()
ggplot(aes(x=year, y= bmi), data = bmi.reshaped) + geom_point(color=Gender)
ggplot(aes(x=year, y= bmi), data = bmi.reshaped) + geom_line(color=Gender)
ggplot(aes(x=year, y= bmi), data = bmi.reshaped) + geom_line(color=Gender,stat="summary", fun.y= mean)
ggplot(aes(x=year, y= bmi), data = bmi.reshaped) + geom_line(color=bmi.reshaped$Gender,stat="summary", fun.y= mean)
ggplot(aes(x=year, y= bmi), data = bmi.reshaped) + geom_line(color= Gender,stat="summary", fun.y= mean)
names(bmi.reshaped)
ggplot(aes(x=year, y= bmi), data = bmi.reshaped) + geom_line(stat="summary", fun.y= mean)
ggplot(aes(x=year, y= bmi), data = bmi.reshaped) + geom_line(stat="summary", fun.y= mean) + facet_wrap(~gender)
ggplot(aes(x=year, y= bmi), data = bmi.reshaped) + geom_line(stat="summary", fun.y= mean) + facet_wrap(~Gender)
ggplot(aes(x=year, y= bmi), data = bmi.reshaped) + geom_line(color=Country, stat="summary", fun.y= mean) + facet_wrap(~Gender)
ggplot(aes(x=year, y= bmi), data = bmi.reshaped) + geom_point(color=Country, stat="summary", fun.y= mean) + facet_wrap(~Gender)
ggplot(aes(x=year, y= bmi), data = bmi.reshaped) + geom_point()
ggplot(aes(x=year, y= bmi), data = bmi.reshaped) + geom_point() + facet_wrap(~Gender)
ggplot(aes(x=year, y= bmi), data = bmi.reshaped) + geom_point(aes(color=Country)) + facet_wrap(~Gender)
ggplot(aes(x=year, y= bmi), data = bmi.reshaped) + geom_jitter(aes(color=Country)) + facet_wrap(~Gender)
ggplot(aes(x=year, y= bmi), data = bmi.reshaped) + geom_jitter(aes(color=Gender))
ggplot(aes(x=year, y= bmi), data = bmi.reshaped) + geom_jitter(aes(color=Gender), alpha = 1/20)
ggplot(aes(x=year, y= bmi), data = bmi.reshaped) + geom_jitter(aes(color=Gender), stat="summary", fun.y = mean)
ggplot(aes(x=year, y= bmi), data = bmi.reshaped) + geom_line(aes(color=Gender), stat="summary", fun.y = mean)
ggplot(aes(x=year, y= bmi), data = bmi.reshaped) + geom_line(aes(color=Gender), stat="summary", fun.y = mean)  + facet_wrap(~Country)
set.seed(4230)
sample.countries <- sample(levels(bmi.reshaped$Country), 16)
sample.countries <- sample(levels(bmi.reshaped$Country), 16)
sample.countries <- sample(bmi.reshaped$Country, 16)
ggplot(aes(x=year, y= bmi), data = subset(bmi.reshaped, Country %in% sample.countries ) + geom_line(aes(color=Gender), stat="summary", fun.y = mean)  + facet_wrap(~Country)
ggplot(aes(x=year, y= bmi), data = subset(bmi.reshaped, Country %in% sample.countries )) + geom_line(aes(color=Gender), stat="summary", fun.y = mean)  + facet_wrap(~Country)
set.seed(6813)
bmi <- read.csv('BMI.csv',sep=',', stringsAsFactors=FALSE, check.names = FALSE)
bmi.reshaped <- bmi %>% gather(year, bmi, c(3:31))
bmi.reshaped$year <- as.numeric(as.character(bmi.reshaped$year))
sample.countries <- sample(bmi.reshaped$Country, 16)
ggplot(aes(x=year, y= bmi), data = subset(bmi.reshaped, Country %in% sample.countries )) + geom_line(aes(color=Gender), stat="summary", fun.y = mean)  + facet_wrap(~Country)
